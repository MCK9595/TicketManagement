@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<div class="d-flex justify-content-center align-items-center" style="min-height: 100vh;">
    <div class="text-center">
        <div class="spinner-border text-primary mb-3" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <h4>Checking authentication...</h4>
        <p class="text-muted">Please wait while we verify your authentication status.</p>
    </div>
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            
            if (authState.User.Identity?.IsAuthenticated != true)
            {
                // Redirect to login
                await JSRuntime.InvokeVoidAsync("window.location.assign", "/authentication/login");
            }
            else
            {
                // User is authenticated, navigate to home
                Navigation.NavigateTo("/", true);
            }
        }
        catch (Exception ex)
        {
            // Fallback redirect to login
            await JSRuntime.InvokeVoidAsync("window.location.assign", "/authentication/login");
        }
    }
}